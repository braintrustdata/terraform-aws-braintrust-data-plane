name: Create Release

on:
  workflow_dispatch:
    inputs:
      module_version:
        description: 'Terraform module release version (e.g., v1.2.3)'
        required: true
        type: string
      services_version:
        description: 'Lock onto Braintrust services version (e.g., v1.2.3). Optional.'
        required: false
        type: string

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Generate GitHub App token
        uses: actions/create-github-app-token@v1
        id: bot-token
        with:
          app-id: ${{ secrets.GH_BOT_APP_ID }}
          private-key: ${{ secrets.GH_BOT_APP_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ steps.bot-token.outputs.token }}
          ref: main

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::872608195481:role/github_ecr_full_access
          aws-region: us-east-1

      - name: Update versions of Braintrust Services
        if: inputs.services_version != ''
        run: |
          git config --global user.name "braintrust-bot[bot]"
          # This is the User Id of the braintrust-bot app
          git config --global user.email "215900051+braintrust-bot[bot]@users.noreply.github.com"

          # Create a new branch for the changes
          git checkout -b update-services-versions-${{ inputs.services_version }}

          ./lock_versions ${{ inputs.services_version }}

          git add .
          if ! git diff --cached --quiet; then
            git commit -m "Update Braintrust Services versions to ${{ inputs.services_version }}"
            git push origin update-services-versions-${{ inputs.services_version }}

            # Create PR and immediately merge it
            PR_NUMBER=$(gh pr create \
              --title "Update Braintrust Services versions to ${{ inputs.services_version }}" \
              --body "Automated update of Braintrust Services versions to ${{ inputs.services_version }}" \
              --base main \
              --head update-services-versions-${{ inputs.services_version }} \
              --json number \
              --jq '.number')

            # Immediately squash merge the PR
            gh pr merge $PR_NUMBER --squash --delete-branch --admin
          else
            echo "No changes detected after running lock_versions, skipping PR creation"
          fi

      - name: Create GitHub Release
        run: |
          gh release create ${{ inputs.module_version }} \
            --draft \
            --generate-notes \
            --title "${{ inputs.module_version }}" \
        env:
          GH_TOKEN: ${{ steps.bot-token.outputs.token }}
